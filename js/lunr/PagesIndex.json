[{"title":"About","href":"about","content":"This is my blog This site was generated using Hugohttpsgohugoio and Casperhttpthemesgohugoiocasper theme "},{"title":"100 days of code challenge","href":"/post/challenge-accepted","content":"This post is only for announcing that I accept 100 days of code challenge Nothing much I will try my best somehow"},{"title":"Day 1 - Github page with Hugo","href":"/post/github-page-with-hugo","content":"This is my first post for 100DaysOfCode from Boot Up 2017 with the 100DaysOfCode Challengehttpsmediumfreecodecampcomstart2017withthe100daysofcodeimprovedandupdated18ce604b237bc5xcsjeiy Maybe I start quite late for the challenge but better late than never Following with the challenge besides writing log about it everyday as the rules I will try to figure out new things and write frequently blog about them Therefore I start this blog I used to build my github page with jekyll but one day when randomly surfing the internet I unexpectedly met Hugo and I decided to build a new site with it halinkspacehttphalinkspace Since there is another tutorial about this on Hugo official documentation sitehttpsgohugoiotutorialsgithubpagesbloghostingpersonalorganizationpages it is a little bit complicated and outdated cos recently github alows github page to generate site from docs folder in the git repository Then the key factor for using hugo with github page here is only the configtoml file With gihub page there are two types of site you can generate first one is personalorganization page which has the url structure like httpsyourgithubusernamegithubio or httpsyourorganizationnamegithubio and the second type is git repository page this page usually for repository documentation and has the url structure like httpsyourgithubusernamegithubiothegitrepositoryslug or httpsyourorganizationnamegithubiothegitrepositoryslug The different between two types of site above is not only the url structure but more important is the source folder which Github used for build the site The first types of site Github only allow you to render from master branch you need to put your hugo render puslish code into the master branch so there is only one thing you need to do here is modify the configtoml and point the publish folder to your master branch of your git repository so here is my configtoml toml pushlishDir The second type of github page you can either build the site from master branch or docs folder of your master branch I prefer having a docs folder where I can store all the documetation for that project then the config should be toml publishDir docs publishDir option tells Hugo where the site should be generate then all you need is to run hugo commit and push it to github Remember to go to repository settings and activate the github page option the your site is ready to online"},{"title":"Day 3 - Hugo search with lunr and gulp","href":"/post/day-3-search-lunr-gulp","content":"Today I will apply javascript dynamic search into this blog using lunrjs a library allow us to do that This is base on a tutorial from Hugo official documentation hugo gruntjs lunrjs 3 searchhttpsgistgithubcomsebzefddfc8fdcb6b480f567 However I will modify it to use Gulp instead of Grunt simply is that I love Gulp more than Grunt Here is the detail Requirement A Hugohttpsgohugoio site lunrjshttplunrjscom for searching gulphttpgulpjscom js var gulp requiregulp var fs requirefs var glob requireglob var toml requiretoml var S requirestring var file requiregulpfile var path content sitecontentmd var processMDFile function var indexFiles globpathcontent functionerr files iferr consolelogerr else filesforEachfunctionfile var content fsreadFileSyncfile utf8 content contentsplit"},{"title":"Hello World","href":"/post/hello-world","content":"This is my first post in this blog then its name Hello Word python print Hello World "},{"title":"Search","href":"search","content":"Keywords Results "}]